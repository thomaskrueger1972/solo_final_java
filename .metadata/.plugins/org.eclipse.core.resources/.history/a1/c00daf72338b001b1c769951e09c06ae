package com.thomas.bookster.controllers;

import javax.servlet.http.HttpSession;
import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;

import com.thomas.bookster.models.Book;
import com.thomas.bookster.models.User;

@Controller
	@RequestMapping("/books")

	public class BookController {
		@Autowired
		private UserService uService;
		@Autowired
		private CourseService cService;
		
		
		@GetMapping("")
		public String courses(HttpSession session, Model viewModel) {
			Long userId = (Long)session.getAttribute("user_id");
			viewModel.addAttribute("books", this.cService.getCourses());
			viewModel.addAttribute("user", this.uService.findOneUser(userId));
			return "books.jsp";
		}
		
		@GetMapping("/new")
		public String newBook(@ModelAttribute("book") Book book, HttpSession session, Model viewModel) {
			Long userId = (Long)session.getAttribute("user_id");
			viewModel.addAttribute("user_id", userId);
			return "new.jsp";
		}	
		



		@PostMapping("/new")
		public String create(@Valid @ModelAttribute("course") Book book, BindingResult result, HttpSession session, Model viewModel) {
			if(result.hasErrors()) {
			Long userId = (Long)session.getAttribute("user_id");
			viewModel.addAttribute("user_id", userId);
			return "new.jsp";
			}
		this.cService.create(book);
		return "redirect:/books";
	}
		
		@GetMapping("{id}")
		public String display(@PathVariable("id") Long id, Model viewModel) {
			viewModel.addAttribute("book", this.cService.findById(id));
			return "edit.jsp";
		}
		@GetMapping("/add/{id}")
		public String addReader(@PathVariable("id") Long id, HttpSession session) {
			Long userId = (Long)session.getAttribute("user_id");
			Book bookAdd = this.cService.getById(id);
			User userToAdd = this.uService.getById(userId);
			this.cService.addReader(readerAdd, userToAdd);
			return "redirect:/books";
		}
		
		@GetMapping("/drop/{id}")
		public String removeReader(@PathVariable("id") Long id, HttpSession session) {
			Long userId = (Long)session.getAttribute("user_id");
			Book bookDrop = this.cService.getById(id);
			User userToDrop = this.uService.getById(userId);
			this.cService.removeReader(readerDrop, userToDrop);
			return "redirect:/books";
		}
		
		@GetMapping("/delete/{id}")
		public String delete(@PathVariable("id") Book book) {
			this.cService.delete(book);
			return "redirect:/books";
		}
	}


